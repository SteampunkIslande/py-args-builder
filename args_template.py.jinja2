{% macro declare_arg(argument) -%}
{% for name in argument.names %}
    "{{name}}",
{% endfor %}
    help="{{argument.help}}",
    type={{argument.type}},
    default={{argument.default}},
    {% if argument.choices %}
    choices=({% for choice in argument.choices %}{{choice}}{{"" if loop.last else ","}}{% endfor %})
    {% endif %}
{%- endmacro %}

import argparse

def main():

    parser = argparse.ArgumentParser(description="{{program_description}}")

    sub_parser = parser.add_subparsers(dest="subparser")
    # Arguments to this parser will be common to every subcommand, and available as members of args.
    parent_parser = argparse.ArgumentParser(add_help=False)
    {% for argument in parent_args %}
    parent_parser.add_argument(
        {{declare_arg(argument)}}
    )
    {% endfor %}
    {% for scenario in scenarii %}
    # This is one subcommand parser, with its very own arguments. These will be available as member of args
    {{scenario.name}}_parser = sub_parser.add_parser(
        "{{scenario.name}}",
        parents=[parent_parser]
    )
    {% for argument in scenario.args %}
    {{scenario.name}}_parser.add_argument(
        {{declare_arg(argument)}}
    )
    {% endfor %}
    {{scenario.name}}_parser.set_defaults(func={{scenario.name}})
    {% endfor %}
    args = vars(parser.parse_args())
    func = args["func"]
    
    chosen_scenario = args["subparser"]
    del args["subparser"]

    del args["func"]

    return func(**args)


if __name__ == "__main__":
    exit(main())
